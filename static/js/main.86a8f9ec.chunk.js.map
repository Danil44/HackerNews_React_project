{"version":3,"sources":["components/NewsBar/NewsBar.js","redux/News/NewsActions.js","redux/News/NewsSelectors.js","components/NewsBar/NewsBarContainer.js","components/NewsItem/NewsItem.js","components/NewsList/NewsList.js","components/NewsList/NewsListContainer.js","redux/News/NewsOperations.js","components/NewsPage/NewsPage.js","App.js","redux/News/NewsReducers.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","container","backgroundColor","teal","tabs","justifySelf","withRouter","_ref","changeTag","location","classes","tag","pathname","replace","react_default","a","createElement","className","AppBar","position","Tabs","indicatorColor","value","onChange","event","variant","scrollButtons","Tab","component","Link","to","label","Type","getNewsTag","state","news","newsTag","getItems","items","mapDispatchToProps","type","payload","connect","NewsBar","imageStyle","height","paddingTop","NewsItem","section","subsection","title","text","abstract","multimedia","url","byline","published_date","image","length","Card","CardMedia","style","CardContent","Typography","gutterBottom","NewsList","fetchNews","this","props","prevProps","prevState","_this$props","Container","maxWidth","Grid","spacing","map","item","xs","sm","key","id","components_NewsItem_NewsItem","Component","dispatch","axios","get","concat","process","then","results","data","Object","objectSpread","shortid","generate","catch","err","error","NewsPage","NewsBarContainer","NewsListContainer","App","CssBaseline","react_router","path","combineReducers","arguments","undefined","_ref2","rootReducer","NewsReducers","middleware","applyMiddleware","ReduxThunk","logger","store","createStore","composeWithDevTools","require","config","ReactDOM","render","es","react_router_dom","basename","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.86a8f9ec.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 40,\n  },\n\n  container: {\n    backgroundColor: teal[900],\n  },\n\n  tabs: {\n    justifySelf: 'center',\n  },\n}));\n\nconst NewsBar = ({ changeTag, location }) => {\n  const classes = useStyles();\n\n  const tag = location.pathname.replace(/^\\/+/g, '') || 'home';\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.container}>\n        <Tabs\n          className={classes.tabs}\n          indicatorColor=\"primary\"\n          value={tag}\n          onChange={(event, value) => changeTag(value)}\n          variant=\"scrollable\"\n          scrollButtons=\"off\"\n        >\n          <Tab component={Link} to=\"/\" value=\"home\" label=\"home\" />\n          <Tab component={Link} to=\"/world\" value=\"world\" label=\"world\" />\n          <Tab\n            component={Link}\n            to=\"/technology\"\n            value=\"technology\"\n            label=\"technology\"\n          />\n          <Tab component={Link} to=\"/health\" value=\"health\" label=\"health\" />\n          <Tab component={Link} to=\"/sports\" value=\"sports\" label=\"sports\" />\n          <Tab component={Link} to=\"/travel\" value=\"travel\" label=\"travel\" />\n          <Tab component={Link} to=\"/science\" value=\"science\" label=\"science\" />\n          <Tab component={Link} to=\"/food\" value=\"food\" label=\"food\" />\n        </Tabs>\n      </AppBar>\n    </div>\n  );\n};\n\nNewsBar.propTypes = {\n  changeTag: PropTypes.func.isRequired,\n};\n\nexport default withRouter(NewsBar);\n","export const Type = {\n  CHANGE_TAG: 'CHANGE_TAG',\n  FETCH_NEWS_START: 'FETCH_NEWS_START',\n  FETCH_NEWS_SUCCESS: 'FETCH_NEWS_SUCCESS',\n  FETCH_NEWS_ERROR: 'FETCH_NEWS_ERROR',\n};\n\nexport const changeTag = tag => ({\n  type: Type.CHANGE_TAG,\n  payload: { tag },\n});\n\nexport const fetchNewsStart = () => ({\n  type: Type.FETCH_NEWS_START,\n});\n\nexport const fetchNewsSuccess = news => ({\n  type: Type.FETCH_NEWS_SUCCESS,\n  payload: { news },\n});\n\nexport const fetchNewsError = error => ({\n  type: Type.FETCH_NEWS_ERROR,\n  payload: { error },\n});\n","export const getNewsTag = state => state.news.newsTag;\n\nexport const getItems = state => state.news.items;\n","import { connect } from 'react-redux';\nimport NewsBar from './NewsBar';\nimport { changeTag } from '../../redux/News/NewsActions';\nimport { getNewsTag } from '../../redux/News/NewsSelectors';\n\nconst mapDispatchToProps = { changeTag };\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(NewsBar);\n","import React from 'react';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\n\nconst imageStyle = {\n  height: 0,\n  paddingTop: '40%',\n};\n\nconst NewsItem = ({\n  section,\n  subsection,\n  title,\n  abstract: text,\n  url,\n  byline: by,\n  published_date: published,\n  multimedia,\n}) => {\n  const image = multimedia.length > 0 ? multimedia[4].url : null;\n  return (\n    <Card>\n      {image && <CardMedia style={imageStyle} image={image} />}\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\">\n          {title}\n        </Typography>\n        <Typography component=\"p\">{text}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default NewsItem;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Grid, Container } from '@material-ui/core';\nimport NewsItem from '../NewsItem/NewsItem';\n\nclass NewsList extends Component {\n  state = {};\n\n  componentDidMount() {\n    const { fetchNews } = this.props;\n    const { location } = this.props;\n    const tag = location.pathname.replace(/^\\/+/g, '') || 'home';\n\n    fetchNews(tag);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { tag, fetchNews } = this.props;\n    if (prevProps.tag !== tag) {\n      fetchNews(tag);\n    }\n  }\n\n  render() {\n    const { items } = this.props;\n    return (\n      <div>\n        <Container maxWidth=\"lg\">\n          <Grid container spacing={4}>\n            {items.map(item => (\n              <Grid item xs={12} sm={6} key={item.id}>\n                <NewsItem {...item} />\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default withRouter(NewsList);\n","import { connect } from 'react-redux';\nimport { fetchNews } from '../../redux/News/NewsOperations';\nimport NewsList from './NewsList';\nimport { getNewsTag, getItems } from '../../redux/News/NewsSelectors';\n\nconst mapStateToProps = state => ({\n  tag: getNewsTag(state),\n  items: getItems(state),\n});\n\nconst mapDispatchToProps = {\n  fetchNews,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NewsList);\n","import axios from 'axios';\nimport shortid from 'shortid';\nimport {\n  fetchNewsStart,\n  fetchNewsSuccess,\n  fetchNewsError,\n} from './NewsActions';\n\nconst API_KEY = process.env.REACT_APP_NEWS_API_KEY;\n\nconst mapper = data => data.map(item => ({ ...item, id: shortid.generate() }));\n\nexport const fetchNews = tag => dispatch => {\n  dispatch(fetchNewsStart());\n\n  axios\n    .get(\n      `https://api.nytimes.com/svc/topstories/v2/${tag}.json?api-key=${API_KEY}`,\n    )\n    .then(({ data: { results } }) =>\n      dispatch(fetchNewsSuccess(mapper(results))),\n    )\n    .catch(err => dispatch(fetchNewsError(err)));\n};\n","import React, { Component } from 'react';\nimport NewsBar from '../NewsBar/NewsBarContainer';\nimport NewsList from '../NewsList/NewsListContainer';\n\nclass NewsPage extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <NewsBar />\n        <NewsList />\n      </div>\n    );\n  }\n}\n\nexport default NewsPage;\n","import React, { lazy, Suspense, Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport NewsPage from './components/NewsPage/NewsPage';\nimport 'typeface-roboto';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <CssBaseline />\n        <Switch>\n          <Route path=\"/\" component={NewsPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { Type } from './NewsActions';\n\nconst tagReducer = (state = 'home', { type, payload }) => {\n  switch (type) {\n    case Type.CHANGE_TAG:\n      return payload.tag;\n\n    default:\n      return state;\n  }\n};\n\nconst itemsReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case Type.FETCH_NEWS_SUCCESS:\n      return payload.news;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  newsTag: tagReducer,\n  items: itemsReducer,\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport ReduxThunk from 'redux-thunk';\nimport NewsReducers from './News/NewsReducers';\n\nconst rootReducer = combineReducers({\n  news: NewsReducers,\n});\n\nconst middleware = applyMiddleware(ReduxThunk, logger);\n\nconst store = createStore(rootReducer, composeWithDevTools(middleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\nrequire('dotenv').config();\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}